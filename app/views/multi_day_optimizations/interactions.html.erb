<div class="container mx-auto px-4 py-6">
  <div class="mb-6">
    <nav class="flex items-center space-x-2 text-sm text-gray-600 mb-4">
      <%= link_to "Dashboard", root_path, class: "hover:text-blue-600" %>
      <span>/</span>
      <%= link_to @cohort.name, cohort_path(@cohort), class: "hover:text-blue-600" %>
      <span>/</span>
      <%= link_to @seating_event.name, cohort_seating_event_path(@cohort, @seating_event), class: "hover:text-blue-600" %>
      <span>/</span>
      <%= link_to "Results", cohort_seating_event_multi_day_optimization_path(@cohort, @seating_event), class: "hover:text-blue-600" %>
      <span>/</span>
      <span class="text-gray-900">Interaction Analysis</span>
    </nav>
    
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-3xl font-bold text-gray-900">Student Interaction Analysis</h1>
        <p class="text-gray-600 mt-1">Detailed analysis of student interactions across all workshop days</p>
      </div>
      
      <div class="flex space-x-3">
        <%= link_to "Calendar View", calendar_cohort_seating_event_multi_day_optimization_path(@cohort, @seating_event),
                class: "px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700" %>
        <%= link_to "Analytics", analytics_cohort_seating_event_multi_day_optimization_path(@cohort, @seating_event),
                class: "px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700" %>
      </div>
    </div>
  </div>

  <!-- Interaction Statistics Overview -->
  <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
    <div class="bg-gradient-to-br from-blue-50 to-blue-100 border border-blue-200 rounded-lg p-6">
      <div class="flex items-center">
        <svg class="w-8 h-8 text-blue-600 mr-3" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M18 13V5a2 2 0 00-2-2H4a2 2 0 00-2 2v8a2 2 0 002 2h3l3 3 3-3h3a2 2 0 002-2zM5 7a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1zm1 3a1 1 0 100 2h3a1 1 0 100-2H6z" clip-rule="evenodd"></path>
        </svg>
        <div>
          <div class="text-2xl font-bold text-blue-700"><%= @interaction_stats[:total_unique_interactions] %></div>
          <div class="text-sm text-blue-600">Total Interactions</div>
        </div>
      </div>
    </div>
    
    <div class="bg-gradient-to-br from-green-50 to-green-100 border border-green-200 rounded-lg p-6">
      <div class="flex items-center">
        <svg class="w-8 h-8 text-green-600 mr-3" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
        </svg>
        <div>
          <div class="text-2xl font-bold text-green-700"><%= @interaction_stats[:strong_relationships] %></div>
          <div class="text-sm text-green-600">Strong Relationships</div>
        </div>
      </div>
    </div>
    
    <div class="bg-gradient-to-br from-purple-50 to-purple-100 border border-purple-200 rounded-lg p-6">
      <div class="flex items-center">
        <svg class="w-8 h-8 text-purple-600 mr-3" fill="currentColor" viewBox="0 0 20 20">
          <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
        <div>
          <div class="text-2xl font-bold text-purple-700"><%= @interaction_stats[:medium_relationships] %></div>
          <div class="text-sm text-purple-600">Medium Relationships</div>
        </div>
      </div>
    </div>
    
    <div class="bg-gradient-to-br from-yellow-50 to-yellow-100 border border-yellow-200 rounded-lg p-6">
      <div class="flex items-center">
        <svg class="w-8 h-8 text-yellow-600 mr-3" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z" clip-rule="evenodd"></path>
        </svg>
        <div>
          <div class="text-2xl font-bold text-yellow-700">
            <%= number_with_precision(@interaction_stats[:average_interaction_frequency], precision: 1) %>
          </div>
          <div class="text-sm text-yellow-600">Avg Frequency</div>
        </div>
      </div>
    </div>
  </div>

  <!-- View Controls -->
  <div class="bg-white border border-gray-200 rounded-lg p-4 mb-6">
    <div class="flex items-center justify-between">
      <div class="flex items-center space-x-4">
        <h2 class="text-lg font-semibold text-gray-900">Interaction Matrix</h2>
        <div class="flex items-center space-x-2">
          <label class="text-sm text-gray-600">Filter by strength:</label>
          <select id="strength-filter" onchange="filterByStrength(this.value)" 
                  class="border border-gray-300 rounded-md px-3 py-1 text-sm">
            <option value="all">All Interactions</option>
            <option value="high">Strong (3+ interactions)</option>
            <option value="medium">Medium (2-3 interactions)</option>
            <option value="low">Weak (1 interaction)</option>
            <option value="none">No Interactions</option>
          </select>
        </div>
      </div>
      
      <div class="flex items-center space-x-2">
        <label class="text-sm text-gray-600">View mode:</label>
        <div class="flex bg-gray-100 rounded-lg p-1">
          <button onclick="setMatrixView('heatmap')" id="heatmap-btn"
                  class="px-3 py-1 text-sm rounded-md bg-white shadow text-gray-900 font-medium">
            Heatmap
          </button>
          <button onclick="setMatrixView('table')" id="table-btn"
                  class="px-3 py-1 text-sm rounded-md text-gray-600 hover:text-gray-900">
            Table
          </button>
          <button onclick="setMatrixView('network')" id="network-btn"
                  class="px-3 py-1 text-sm rounded-md text-gray-600 hover:text-gray-900">
            Network
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Interaction Matrix Heatmap -->
  <div id="heatmap-view" class="matrix-view bg-white border border-gray-200 rounded-lg p-6 mb-6">
    <div class="overflow-x-auto">
      <div class="min-w-full">
        <!-- Heatmap Header -->
        <div class="flex mb-2">
          <div class="w-32"></div> <!-- Empty corner for student names -->
          <% @seating_event.cohort.students.includes(:table_assignments).limit(20).each_with_index do |student, index| %>
            <div class="w-12 h-12 flex items-center justify-center text-xs font-medium text-gray-700 transform -rotate-45 origin-bottom-left">
              <%= student.name.split(' ').map(&:first).join('') %>
            </div>
          <% end %>
        </div>
        
        <!-- Heatmap Body -->
        <% @seating_event.cohort.students.includes(:table_assignments).limit(20).each do |student_a| %>
          <div class="flex items-center mb-1">
            <div class="w-32 text-sm font-medium text-gray-700 truncate pr-2">
              <%= student_a.name %>
            </div>
            
            <% @seating_event.cohort.students.includes(:table_assignments).limit(20).each do |student_b| %>
              <%
                if student_a.id == student_b.id
                  cell_class = "bg-gray-200"
                  cell_content = ""
                  cell_title = "Same student"
                else
                  interaction_key = [student_a.id, student_b.id].sort.join('-')
                  interaction = @interaction_matrix[interaction_key]
                  
                  if interaction
                    count = interaction[:count]
                    strength = interaction[:strength]
                    
                    case strength
                    when :high
                      cell_class = "bg-red-500 text-white"
                    when :medium
                      cell_class = "bg-yellow-400 text-gray-900"
                    when :low
                      cell_class = "bg-green-200 text-gray-900"
                    else
                      cell_class = "bg-gray-100"
                    end
                    
                    cell_content = count.to_s
                    cell_title = "#{student_a.name} & #{student_b.name}: #{count} interactions (#{strength})"
                  else
                    cell_class = "bg-gray-50 border border-gray-200"
                    cell_content = "0"
                    cell_title = "#{student_a.name} & #{student_b.name}: No interactions"
                  end
                end
              %>
              
              <div class="w-12 h-12 flex items-center justify-center text-xs font-medium <%= cell_class %> 
                          cursor-pointer hover:opacity-80 transition-opacity"
                   title="<%= cell_title %>"
                   data-strength="<%= interaction ? interaction[:strength] : 'none' %>"
                   onclick="showInteractionDetails('<%= student_a.name %>', '<%= student_b.name %>', <%= interaction ? interaction[:count] : 0 %>)">
                <%= cell_content %>
              </div>
            <% end %>
          </div>
        <% end %>
      </div>
      
      <% if @seating_event.cohort.students.count > 20 %>
        <div class="mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-md">
          <p class="text-sm text-yellow-800">
            <strong>Note:</strong> Showing interactions for first 20 students only for performance. 
            The complete analysis includes all <%= @seating_event.cohort.students.count %> students.
          </p>
        </div>
      <% end %>
    </div>
    
    <!-- Heatmap Legend -->
    <div class="mt-6 flex items-center justify-center space-x-6 text-sm">
      <div class="flex items-center">
        <div class="w-4 h-4 bg-gray-100 border border-gray-200 mr-2"></div>
        <span class="text-gray-600">No Interactions</span>
      </div>
      <div class="flex items-center">
        <div class="w-4 h-4 bg-green-200 mr-2"></div>
        <span class="text-gray-600">Low (1 interaction)</span>
      </div>
      <div class="flex items-center">
        <div class="w-4 h-4 bg-yellow-400 mr-2"></div>
        <span class="text-gray-600">Medium (2-3 interactions)</span>
      </div>
      <div class="flex items-center">
        <div class="w-4 h-4 bg-red-500 mr-2"></div>
        <span class="text-gray-600">High (3+ interactions)</span>
      </div>
    </div>
  </div>

  <!-- Interaction Table View -->
  <div id="table-view" class="matrix-view hidden bg-white border border-gray-200 rounded-lg p-6 mb-6">
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Student Pair
            </th>
            <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
              Interactions
            </th>
            <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
              Days Together
            </th>
            <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
              Strength
            </th>
            <th class="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
              Last Interaction
            </th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% @interaction_matrix.values.sort_by { |interaction| -interaction[:count] }.first(50).each do |interaction| %>
            <tr class="hover:bg-gray-50" data-strength="<%= interaction[:strength] %>">
              <td class="px-4 py-4 text-sm font-medium text-gray-900">
                <%= interaction[:students][0].name %> & <%= interaction[:students][1].name %>
              </td>
              <td class="px-4 py-4 text-center">
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium
                       <%= case interaction[:strength]
                           when :high then 'bg-red-100 text-red-800'
                           when :medium then 'bg-yellow-100 text-yellow-800' 
                           when :low then 'bg-green-100 text-green-800'
                           else 'bg-gray-100 text-gray-800'
                           end %>">
                  <%= interaction[:count] %>
                </span>
              </td>
              <td class="px-4 py-4 text-center text-sm text-gray-600">
                <%= interaction[:days].join(', ') if interaction[:days].respond_to?(:join) %>
              </td>
              <td class="px-4 py-4 text-center">
                <span class="capitalize text-sm
                       <%= case interaction[:strength]
                           when :high then 'text-red-600 font-medium'
                           when :medium then 'text-yellow-600 font-medium'
                           when :low then 'text-green-600'
                           else 'text-gray-500'
                           end %>">
                  <%= interaction[:strength] %>
                </span>
              </td>
              <td class="px-4 py-4 text-center text-sm text-gray-600">
                <%= interaction[:last_interaction]&.strftime("%m/%d") || 'N/A' %>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
      
      <% if @interaction_matrix.keys.count > 50 %>
        <div class="mt-4 text-center">
          <p class="text-sm text-gray-500">
            Showing top 50 interactions. Total: <%= @interaction_matrix.keys.count %> unique pairs.
          </p>
        </div>
      <% end %>
    </div>
  </div>

  <!-- Network View -->
  <div id="network-view" class="matrix-view hidden bg-white border border-gray-200 rounded-lg p-6 mb-6">
    <div class="text-center py-12">
      <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
      </svg>
      <h3 class="text-lg font-medium text-gray-900 mb-2">Network Visualization</h3>
      <p class="text-gray-600 mb-4">Interactive network visualization showing student relationship connections</p>
      
      <!-- Network Summary -->
      <% if @network_analysis %>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 max-w-2xl mx-auto mb-6">
          <div class="p-3 bg-blue-50 rounded-lg">
            <div class="text-2xl font-bold text-blue-600"><%= number_with_precision(@network_analysis[:network_density], precision: 2) %></div>
            <div class="text-sm text-blue-600">Network Density</div>
          </div>
          <div class="p-3 bg-green-50 rounded-lg">
            <div class="text-2xl font-bold text-green-600"><%= @network_analysis[:identified_clusters].count %></div>
            <div class="text-sm text-green-600">Student Clusters</div>
          </div>
          <div class="p-3 bg-purple-50 rounded-lg">
            <div class="text-2xl font-bold text-purple-600"><%= @network_analysis[:most_connected_students].count %></div>
            <div class="text-sm text-purple-600">Connectors</div>
          </div>
        </div>
      <% end %>
      
      <div class="p-4 bg-gray-50 rounded-lg text-sm text-gray-600 max-w-lg mx-auto">
        Network visualization would be implemented using D3.js or similar library to show:
        <ul class="mt-2 text-left space-y-1">
          <li>• Student nodes sized by connection count</li>
          <li>• Edges colored by interaction strength</li>
          <li>• Clusters highlighted by community detection</li>
          <li>• Interactive exploration and filtering</li>
        </ul>
      </div>
    </div>
  </div>

  <!-- Student Interaction Details Modal -->
  <div id="interaction-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-white rounded-lg shadow-xl max-w-lg w-full mx-4">
      <div class="p-6">
        <div class="flex items-center justify-between mb-4">
          <h3 id="modal-title" class="text-lg font-semibold text-gray-900"></h3>
          <button onclick="closeInteractionModal()" class="text-gray-400 hover:text-gray-600">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        
        <div id="modal-content">
          <!-- Interaction details will be loaded here -->
        </div>
      </div>
    </div>
  </div>

  <!-- Actions -->
  <div class="flex items-center justify-between pt-6 border-t border-gray-200">
    <div class="flex space-x-3">
      <%= link_to "Back to Results", cohort_seating_event_multi_day_optimization_path(@cohort, @seating_event),
              class: "px-4 py-2 border border-gray-300 rounded-md shadow-sm bg-white text-gray-700 hover:bg-gray-50" %>
    </div>
    
    <div class="flex space-x-3">
      <button onclick="exportInteractionData()" 
              class="px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700">
        Export Interaction Data
      </button>
      <%= link_to "Detailed Analytics", analytics_cohort_seating_event_multi_day_optimization_path(@cohort, @seating_event),
              class: "px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700" %>
    </div>
  </div>
</div>

<script>
function setMatrixView(viewType) {
  // Hide all views
  document.querySelectorAll('.matrix-view').forEach(view => view.classList.add('hidden'));
  
  // Remove active state from all buttons
  ['heatmap-btn', 'table-btn', 'network-btn'].forEach(btnId => {
    const btn = document.getElementById(btnId);
    btn.classList.remove('bg-white', 'shadow', 'text-gray-900', 'font-medium');
    btn.classList.add('text-gray-600');
  });
  
  // Show selected view
  document.getElementById(`${viewType}-view`).classList.remove('hidden');
  
  // Add active state to selected button
  const activeBtn = document.getElementById(`${viewType}-btn`);
  activeBtn.classList.add('bg-white', 'shadow', 'text-gray-900', 'font-medium');
  activeBtn.classList.remove('text-gray-600');
}

function filterByStrength(strength) {
  const rows = document.querySelectorAll('[data-strength]');
  
  rows.forEach(row => {
    if (strength === 'all' || row.dataset.strength === strength) {
      row.style.display = '';
    } else {
      row.style.display = 'none';
    }
  });
}

function showInteractionDetails(student1, student2, count) {
  if (count === 0) return;
  
  const modal = document.getElementById('interaction-modal');
  const title = document.getElementById('modal-title');
  const content = document.getElementById('modal-content');
  
  title.textContent = `${student1} & ${student2}`;
  content.innerHTML = `
    <div class="space-y-3">
      <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
        <span class="text-sm font-medium text-gray-700">Total Interactions:</span>
        <span class="text-lg font-bold text-purple-600">${count}</span>
      </div>
      
      <div class="text-sm text-gray-600">
        <p>These students have been seated together ${count} ${count === 1 ? 'time' : 'times'} across the workshop days.</p>
      </div>
      
      <div class="mt-4">
        <h4 class="font-medium text-gray-900 mb-2">Interaction History:</h4>
        <div class="text-sm text-gray-600">
          <p>Detailed interaction history would be displayed here, including specific days and table assignments.</p>
        </div>
      </div>
    </div>
  `;
  
  modal.classList.remove('hidden');
  modal.classList.add('flex');
}

function closeInteractionModal() {
  const modal = document.getElementById('interaction-modal');
  modal.classList.add('hidden');
  modal.classList.remove('flex');
}

function exportInteractionData() {
  // Implementation for exporting interaction matrix data
  const csvData = generateInteractionCSV();
  downloadCSV(csvData, 'interaction-matrix.csv');
}

function generateInteractionCSV() {
  // Generate CSV data from interaction matrix
  let csv = 'Student A,Student B,Interactions,Strength,Days Together\n';
  
  // This would iterate through the actual interaction matrix data
  // For now, showing the structure
  return csv;
}

function downloadCSV(csv, filename) {
  const blob = new Blob([csv], { type: 'text/csv' });
  const url = window.URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = filename;
  a.click();
  window.URL.revokeObjectURL(url);
}

// Close modal when clicking outside
document.getElementById('interaction-modal').addEventListener('click', function(e) {
  if (e.target === this) {
    closeInteractionModal();
  }
});

// Keyboard shortcuts
document.addEventListener('keydown', function(e) {
  if (e.key === 'Escape') {
    closeInteractionModal();
  }
});

// Initialize with heatmap view
document.addEventListener('DOMContentLoaded', function() {
  setMatrixView('heatmap');
});
</script>

<% content_for :head do %>
  <style>
    .matrix-view {
      min-height: 400px;
    }
    
    /* Heatmap cell hover effects */
    .heatmap-cell {
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    
    .heatmap-cell:hover {
      transform: scale(1.1);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      z-index: 10;
      position: relative;
    }
    
    /* Custom scrollbar for matrix */
    .overflow-x-auto::-webkit-scrollbar {
      height: 8px;
    }
    
    .overflow-x-auto::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 10px;
    }
    
    .overflow-x-auto::-webkit-scrollbar-thumb {
      background: #888;
      border-radius: 10px;
    }
    
    .overflow-x-auto::-webkit-scrollbar-thumb:hover {
      background: #555;
    }
  </style>
<% end %>